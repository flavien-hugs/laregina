# Generated by Django 3.1.5 on 2021-01-21 08:23

import core.utils
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import mptt.fields
import tagulous.models.fields
import tagulous.models.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('category', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Le nom du produit', max_length=120, verbose_name='nom du produit')),
                ('quantity', models.PositiveIntegerField(default=1, help_text='quantité de produit', verbose_name='quantité')),
                ('price', models.DecimalField(blank=True, decimal_places=0, default=0, help_text='Le prix du produit', max_digits=50, verbose_name='prix')),
                ('old_price', models.DecimalField(blank=True, decimal_places=0, default=0, max_digits=50, null=True, verbose_name='ancien tarif')),
                ('description', models.TextField(help_text='Définir votre produit.', verbose_name='description du produit')),
                ('is_promotion', models.BooleanField(default=False, verbose_name='mettre le produit en promotion')),
                ('promotion_price', models.DecimalField(blank=True, decimal_places=0, default=0, max_digits=50, verbose_name='prix de la promotion')),
                ('is_external', models.BooleanField(default=False, help_text='Ce produit peut-être livrer en dehors de votre pays ?', verbose_name='Livrez-vous en dehors de votre pays ?')),
                ('external_delivery', models.DecimalField(blank=True, decimal_places=0, default=0, max_digits=50, verbose_name='Prix de la livraison internationale')),
                ('is_active', models.BooleanField(default=True, help_text='ce produit est-il disponible ?', verbose_name='produit disponible ?')),
                ('is_stock', models.BooleanField(default=True, help_text='produit en stock', verbose_name='en stock')),
                ('slug', models.SlugField(blank=True, help_text='Unique value for product page URL, created automatically from name.', verbose_name='URL du produit')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text="date d'ajout automatique du produit", verbose_name='date de création')),
                ('updated_at', models.DateTimeField(auto_now_add=True, help_text='date de mise à jour automatique du produit.', verbose_name='date de mise à jour')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('nb_view', models.PositiveIntegerField(blank=True, default=0, verbose_name='Nombre de vues du produit')),
                ('category', mptt.fields.TreeForeignKey(help_text='Selectionner la/les catégorie(s) du produit.', on_delete=django.db.models.deletion.CASCADE, to='category.category', verbose_name='catégorie')),
            ],
            options={
                'verbose_name_plural': 'produits',
                'ordering': ['-created_at', '-updated_at', '-timestamp'],
                'get_latest_by': ['-created_at', '-updated_at', '-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='Variation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='variante du produit', max_length=120, verbose_name='le nom du produit')),
                ('price', models.DecimalField(blank=True, decimal_places=0, default=0, help_text='le prix du produit', max_digits=50, verbose_name='le prix du produit')),
                ('sale_price', models.DecimalField(blank=True, decimal_places=0, default=0, help_text='le prix du produit', max_digits=50, verbose_name='le prix de vente du produit')),
                ('is_active', models.BooleanField(default=True, help_text='décoché cette case si ce produit est indisponible.', verbose_name='disponibilité du produit')),
                ('inventory', models.PositiveIntegerField(blank=True, help_text='ce produit est en stock ?', null=True, verbose_name='inventaire du produit')),
                ('product', models.ForeignKey(help_text='variante du produit', on_delete=django.db.models.deletion.CASCADE, related_name='varition', to='catalogue.product', verbose_name='variant du produit')),
            ],
        ),
        migrations.CreateModel(
            name='Tagulous_Product_keywords',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('slug', models.SlugField()),
                ('count', models.IntegerField(default=0, help_text='Internal counter of how many times this tag is in use')),
                ('protected', models.BooleanField(default=False, help_text='Will not be deleted when the count reaches 0')),
            ],
            options={
                'ordering': ('name',),
                'abstract': False,
                'unique_together': {('slug',)},
            },
            bases=(tagulous.models.models.BaseTagModel, models.Model),
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to=core.utils.upload_image_path, verbose_name='image du produit')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='catalogue.product', verbose_name='image produit')),
            ],
            options={
                'verbose_name': 'image du produit',
                'verbose_name_plural': 'images du produit',
                'ordering': ('product',),
            },
        ),
        migrations.AddField(
            model_name='product',
            name='keywords',
            field=tagulous.models.fields.TagField(_set_tag_meta=True, blank=True, help_text='Comma-delimited set of SEO keywords for keywords meta tag', to='catalogue.Tagulous_Product_keywords', verbose_name='mots clés'),
        ),
        migrations.AddField(
            model_name='product',
            name='user',
            field=models.ForeignKey(help_text='Le magasin en charge de la vente.', limit_choices_to={'is_seller': True, 'is_staff': True, 'is_superuser': True}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='seller', to=settings.AUTH_USER_MODEL, verbose_name='vendeur'),
        ),
        migrations.AlterUniqueTogether(
            name='product',
            unique_together={('slug',)},
        ),
    ]
