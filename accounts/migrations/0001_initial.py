# Generated by Django 3.1.7 on 2021-02-24 03:32

from django.db import migrations, models
import django_countries.fields
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('shipping_first_name', models.CharField(max_length=50, verbose_name='nom de famille')),
                ('shipping_last_name', models.CharField(max_length=50, verbose_name='prénom')),
                ('phone', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None, verbose_name='numéro de téléphone')),
                ('phone_two', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, region=None, verbose_name='téléphone supplémentaire (facultatif)')),
                ('shipping_city', models.CharField(max_length=50, verbose_name='ville')),
                ('shipping_country', django_countries.fields.CountryField(max_length=2, verbose_name='pays/région')),
                ('shipping_adress', models.CharField(max_length=50, verbose_name='votre situation géographique')),
                ('shipping_zip', models.CharField(blank=True, max_length=10, null=True, verbose_name='adresse postal (facultatif)')),
                ('note', models.TextField(blank=True, max_length=120, null=True, verbose_name='note de commande (facultatif)')),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('email', models.EmailField(error_messages={'unique': 'Un utilisateur disposant de ce courriel existe déjà.'}, max_length=254, unique=True, verbose_name='email')),
                ('active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name_plural': 'acheteur(s)',
                'db_table': 'accounts_buyer_db',
                'ordering': ('-created_at', '-active'),
                'get_latest_by': ('-created_at', '-active'),
                'index_together': {('email',)},
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('shipping_first_name', models.CharField(max_length=50, verbose_name='nom de famille')),
                ('shipping_last_name', models.CharField(max_length=50, verbose_name='prénom')),
                ('phone', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None, verbose_name='numéro de téléphone')),
                ('phone_two', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, region=None, verbose_name='téléphone supplémentaire (facultatif)')),
                ('shipping_city', models.CharField(max_length=50, verbose_name='ville')),
                ('shipping_country', django_countries.fields.CountryField(max_length=2, verbose_name='pays/région')),
                ('shipping_adress', models.CharField(max_length=50, verbose_name='votre situation géographique')),
                ('shipping_zip', models.CharField(blank=True, max_length=10, null=True, verbose_name='adresse postal (facultatif)')),
                ('note', models.TextField(blank=True, max_length=120, null=True, verbose_name='note de commande (facultatif)')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('civility', models.CharField(choices=[('M.', 'M.'), ('Mme', 'Mme'), ('Mlle', 'Mlle')], default='M.', max_length=4, verbose_name='civilité')),
                ('store_id', models.CharField(blank=True, max_length=50, null=True, unique=True, verbose_name='ID STORE')),
                ('email', models.EmailField(error_messages={'unique': 'Un utilisateur disposant de ce courriel existe déjà.'}, max_length=254, unique=True, verbose_name='email')),
                ('store', models.CharField(error_messages={'unique': 'Un magasin disposant de ce nom existe déjà.'}, max_length=80, unique=True, verbose_name='boutique')),
                ('store_description', models.TextField(blank=True, max_length=254, null=True, verbose_name='description de la boutique')),
                ('facebook', models.URLField(blank=True, max_length=250, null=True, verbose_name='compte facebook')),
                ('twitter', models.URLField(blank=True, max_length=250, null=True, verbose_name='compte twitter')),
                ('linkedin', models.URLField(blank=True, max_length=250, null=True, verbose_name='compte linkedin')),
                ('instagramm', models.URLField(blank=True, max_length=250, null=True, verbose_name='compte instagramm')),
                ('is_staff', models.BooleanField(default=False, verbose_name='statut équipe')),
                ('is_superuser', models.BooleanField(default=False, verbose_name='statut administrateur')),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
                ('is_seller', models.BooleanField(default=False, verbose_name='statut vendeur')),
                ('last_login', models.DateTimeField(auto_now_add=True, verbose_name='date de derniere connexion')),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name="date d'inscription")),
                ('slug', models.SlugField(blank=True, help_text='lien vers la boutique', verbose_name='URL de la boutique')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name_plural': 'vendeur(s)',
                'db_table': 'accounts_db',
                'ordering': ('-date_joined', '-last_login'),
                'get_latest_by': ('-date_joined', '-last_login'),
                'index_together': {('email',)},
            },
        ),
    ]
